BGP Best Path Selection Algorithm
http://www.cisco.com/c/en/us/support/docs/ip/border-gateway-protocol-bgp/13753-25.html

Why Routers Ignore Paths:
 - path are marked “not synchronized” in sh ip bgp longer-prefixes output
 - next hop is inaccessible or unreachable
 - path from eBGP neighbor has local AS in AS_PATH
 - bgp enforce-first-as is set and the update doesn’t list the neighbor AS as the first AS
 - paths are marked “receive only” in sh ip bgp longer-prefixes output
     -> sh ip bgp 192.0.2.0 255.255.255.0 longer-prefixes
     -> sh ip bgp 192.0.2.0 255.255.255.0
 - path is not synchronized and synchronization is enabled
 - path is denied by inbound BGP policies or inbound soft reset is configured
     -> bgp soft-reconfig-backup
          -> configure soft reconfiguration for peers that do not support the route refresh capability
     -> neighbor 1.1.1.1 soft-reconfiguration inbound
 - route is dampened 

Best Path Algorithm:
 note: if extended community cost is configured for pre-bestpath, compare before anything else
     -> lowest is best
     -> set extcommunity cost pre-bestpath <community-id> <cost>
     -> bgp bestpath cost-community ignore
         -> this command was intended only to assist in troubleshooting path selection

- Important, next hop needs to be valid
- It’s not that difficult to remember whether higher or lower is best.  With the first two (weight and local_preference), highest is best.  
  Everything else, lowest, shortest, or oldest is best.
- The steps below include the configuration commands that can modify the default behavior of each step.


 1.  weight
     -> highest is best
     -> Cisco proprietary
     -> not actually a BGP attribute
     -> locally significant
     -> range 0 to 65,535
     -> default is 0 for received routes
     -> default is 32768 for locally generated routes
     
     -> route-map WEIGHT permit 10
     ->   set weight 40000
     -> neighbor 192.0.2.1 route-map WEIGHT in
     -> neighbor 192.0.2.1 default-originate route-map WEIGHT in
     -> network 192.0.2.0 mask 255.255.255.0 route-map WEIGHT
         -> This works.  As does applying the route-map to the redistribute and aggregate-address commands.  But why would you do this to 
            locally originated routes since it’s only locally significant.


 2.  local_preference
     -> highest is best
     -> well-known, discretionary attribute LOCAL_PREF
     -> significant only in the local AS
     -> range 0 to 4294967295
     -> default 100 for every route
     
     -> bgp default local-preference 200
     -> change the default local-preference
     
     -> route-map LP permit 10
     ->   set local-preference 200
     ->neighbor 192.0.2.1 route-map LP out
     ->neighbor 192.0.2.1 default-originate route-map LP
     -> redistribute eigrp 1 route-map LP
     -> redistribute ospf 1 route-map LP match internal external 1 external 2
     -> network 192.0.2.0 mask 255.255.255.0 route-map LP
     -> aggregate-address 192.0.2.0 255.255.255.252 attribute-map LP
     
     -> to clear or reset the LOCAL_PREF sent by a peer, set to the default value
     -> route-map CLEAR_LP permit 10
     ->   set local-preference 100
     ->neighbor 192.0.2.1 route-map CLEAR_LP in


 3.  locally originated path
     -> locally generated routes are preferred over received routes
     -> default-originate
          -> configured per neighbor
          -> neighbor 192.0.2.1 default-originate
          -> advertise a default route to the neighbor, even if one is not currently in the RIB
     -> default-information originate
          -> configured per address family
          -> add a default route to the BGP table and advertise to all neighbors, even if one is not currently in the RIB
     -> network command
          -> network 0.0.0.0
          -> if 0.0.0.0 is present in the RIB, add to BGP table and advertise to all neighbors
     -> aggregate-address command
          -> summary-only
          -> advertise only the aggregate address, suppress longer prefixes
          -> aggregate-address 10.11.0.0 255.255.0.0 summary-only
          -> the aggregate-timer is set to 30 seconds by default.  new, longer prefixes may be briefly advertised until 
             the aggregate-timer runs
             -> the new, longer-prefix will then be withdrawn from the neighbors.
          -> if this may be a problem, such as in data centers or if the longer prefix can slip through policies or filters on 
             other routers, bgp aggregate-timer 0
     -> redistribute command


 3a.  Accumulated Interior Gateway Protocol (AIGP)
     -> lowest is best
     -> AIGP is an optional, non-transitive attribute
     -> range 0 - 4294967295
     -> AIGP path compared to AIGP path, the value of the AIGP metric is added to the metric towards the next-hop
     -> AIGP path compared to non-AIGP path, path with AIGP attribute is preferred
     -> Using AIGP with non-AIGP capable neighbors
        -> AIGP can be translated to a cost community
            -> The cost community point of insertion (POI) is specified
                -> Pre-bestpath
                -> IGP metric
        -> AIGP can be translated to MED
        
     -> bgp bestpath aigp ignore
     
     -> route-map AIGP permit 10
     ->  set aigp-metric igp-metric
     ->  set aigp-metric 100
     -> neighbor 192.0.2.1 aigp
     -> neighbor 192.0.2.1 route-map AIGP out
     -> redistribute bgp 100 route-map AIGP
     -> neighbor 192.0.2.1 send-community both
     -> neighbor 192.0.2.1 aigp cost-community 100 poi igp-cost transitive
     -> neighbor 192.0.2.1 aigp cost-community 100 poi pre-bestpath transitive
     -> neighbor 192.0.2.1 aigp send med
     -> neighbor 192.0.2.1 path-attribute treat-as-withdraw 26 in
         -> all prefixes in the UPDATE are removed from the BGP routing table
         -> path-attribute treat-as-withdraw cannot be used with most attributes
     -> neighbor 192.0.2.1 path-attribute discard 26 in
         -> drop the AIGP path attribute, then process the UPDATE as usual
         -> path-attribute discard cannot be used with most attributes


 4.  AS_PATH
     -> shortest is best
     -> range of 1 - 255 
     -> well-known mandatory attribute AS_PATH
     -> primary purpose is to provide loop prevention for inter-AS routing
     
     -> bgp bestpath as-path ignore
     
     -> route-map PREPEND permit 10
     ->   set as-path prepend 100 100
     -> neighbor 192.0.2.1 route-map PREPEND out
     
     -> neighbor 192.0.2.1 local-as 99
     -> local-as is intended to help with BGP ASN or ISP migrations
     -> local-as number must be different than the local AS and the peer AS
     -> local-as will be added to the AS_PATH making it longer
     -> neighbor 192.0.2.1 local-as 99 no-prepend
     -> local-as will not be added to the AS_PATH
     
     -> neighbor 192.0.2.1 remove-private-as
     -> removed private AS from AS_PATH
     -> neighbor 192.0.2.1 remove-private-as replace-as
     
     -> replaces any private AS in AS_PATH with router's local AS
     -> neighbor 192.0.2.1 as-override
     -> replaces the AS of the customer in AS_PATH with the AS of the provider
     -> used in address-family ipv4 vrf VRF_NAME or address-family ipv6 vrf VRF_NAME
     
     -> configured a site-of-origin to prevent routing loops
     -> neighbor 192.0.2.1 soo 64496:64511
     -> route-map SOO permit 10
     ->     set extcommunity soo 64496:645111
     -> neighbor 192.0.2.1 route-map SOO in
     
     -> neighbor 192.0.2.1 allowas-in
     -> accept an AS_PATH that contains the local AS
     
     -> route-map REPLACE_AS permit 10
     ->     set as-path replace 100
     -> neighbor 192.0.2.1 route-map REPLACE_AS in
     -> replace the AS 100 in AS_PATH with the local AS
     -> feature added in IOS XE 17.1.1
     -> note:  the AS_PATH length is not changed
     
     -> route-map REPLACE_AS permit 10
     ->     set as-path replace any
     -> neighbor 192.0.2.1 route-map REPLACE_AS in
     -> replace all AS listed in AS_PATH with the local AS
     -> note:  the AS_PATH length is not changed
     -> an AS_PATH of 123 234 345 456 567 becomes 100 100 100 100 100
     
     -> to strip the AS_PATH and replace with only the local AS, configure a locally originated path
     -> ip route 0.0.0.0 0.0.0.0 192.0.2.1 name STRIP_AS_PATH_INFORMATION
     -> network 0.0.0.0
     -> an AS_PATH of 123 234 345 456 567 becomes 100
     
     -> aggregate-address with as-set
     -> causes the path information from the longer prefixes will be summarized in a set, 300 {200,100}
     -> aggregate-address 10.11.0.0 255.255.0.0 summary-only as-set


 5.  ORIGIN
     -> lowest type is best
     -> well-known mandatory attribute ORIGIN
     -> IGP < EGP < INCOMPLETE
     -> IGP
          -> network command
     -> INCOMPLETE
          -> redistribute command
          
     -> route-map ORIGIN permit 10
     ->    set origin igp
     
     -> route-map ORIGIN permit 10
     ->    set origin incomplete


 6.  multi-exit discriminator (MED)
     -> metric
     -> lowest is best
     -> optional non-transitive attribute MULTI_EXIT_DISC
     -> range 0 to 65,535
     -> default is 0 for received routes
         -> when MED is not assigned
     -> set to the value of the IGP metric for routes injected into BGP
         -> network or redistribute commands
     -> if the injected route is a connected route, set the MED to 0
         -> network or redistribute commands
     -> if the route was injected by the aggregate-address command, set the MED to 0
     -> used to influence a neighboring AS with multiple entry points
     -> or a neighboring AS may be influencing the local AS with multiple entry points
     -> compared only if the first AS in the AS_SEQUENCE is the same for multiple paths
     -> confederation sub-ASs are ignored unless configured
     
     -> bgp deterministic-med
         -> compare routes advertised by different peers in the same AS
     
     -> bgp always-compare-med
         -> compare routes advertised by different ASs.
         -> if used, must be configured in the entire AS to prevent routing loops
     
     -> bgp bestpath med confed
         -> compare all paths that consist only of AS_CONFED_SEQUENCE
     
     -> bgp bestpath med confed missing-as-worst
     
     -> bgp bestpath med missing-as-worst
     
     -> route-map MED permit 10
     ->   set metric 100
     
     -> route-map MED permit 10
     ->   set metric-type internal
         -> if a border router learns a route from an iBGP peer, set the metric to the IGP cost instead of removing MED from the 
            UPDATE sent to the eBGP peer
         -> if the route originates from IS-IS, use the internal metric
         
     ->   set metric-type external
         -> if the route originates from IS-IS, use the external metric
         
     ->   set metric-type type-1
         -> if the route originates from OSPF, use the external type-1 metric
         
     ->   set metric-type type-2
         -> if the route originates from OSPF, use the external type-2 metric
     -> neighbor 192.0.2.1 route-map MED out
     -> neighbor 192.0.2.1 default-originate route-map MED out
     -> redistribute eigrp 1 metric 100
     -> redistribute ospf 1 metric 100 match internal external 1 external 2
     -> redistribute eigrp 1 route-map MED
     -> redistribute ospf 1 route-map MED match internal external 1 external 2
     -> network 192.0.2.0 mask 255.255.255.0 route-map MED
     -> aggregate-address 192.0.2.0 255.255.255.252 attribute-map MED


 7.  eBGP over iBGP
     -> paths that contain AS_CONFED_SEQUENCE and AS_CONFED_SET are considered internal


 8.  IGP metric
     -> lowest is best
     
     -> bgp bestpath igp-metric ignore
         -> address-family command
         -> must be used when the Diverse Path feature is used and the route-reflector and shadow route-reflector are not co-located
         -> in this case, configured on the RR, shadow RR, and PE routers


9.  extended community cost
     -> IGP point of insertion (POI)
     -> lowest is best
     
       -> route-map EXTCOMMUMITYCOST permit 10
         ->   set extcommunity cost 1 1
    
       -> route-map EXTCOMMUMITYCOST permit 10
         ->   set extcommunity cost igp 1 1
         -> neighbor 192.0.2.1 route-map EXTCOMMUMITYCOST out
         -> neighbor 192.0.2.1 default-originate route-map EXTCOMMUMITYCOST out
         -> redistribute eigrp 1 route-map EXTCOMMUMITYCOST
         -> redistribute ospf 1 route-map EXTCOMMUMITYCOST match internal external 1 external 2
         -> network 192.0.2.0 mask 255.255.255.0 route-map EXTCOMMUMITYCOST
         -> aggregate-address 192.0.2.0 255.255.255.252 attribute-map EXTCOMMUMITYCOST


10.  multipath
     -> if multiple paths match the above steps, 
     -> determine if multiple paths require installation into the routing table
     -> default, only one best path is installed into the routing table
     
     -> maximum-paths 2
        -> protocol independent command for equal-costs paths
        
     -> maximum-paths eibgp 2
        -> install parallel iBGP and eBGP routes
        
     -> maximum-paths eibgp 2 import 2
        -> specifies the number of redundant paths configured as back up multipaths for a VRF
        
     -> maximum-paths ibgp 2
         -> install both equal-cost and unequal-cost iBGP routes
         
     -> maximum-paths ibgp 2 import 2
         -> specifies the number of redundant paths configured as back up multipaths for a VRF
         
     -> maximum-paths ibgp unequal-cost 2
         -> install iBGP unequal-cost routes for a VRF
         -> only in address-family ipv4 vrf VRF_NAME and address-family ipv6 vrf VRF_NAME
         
     -> bgp bestpath as-path mutlipath-relax
        -> hidden command in older IOS versions
        -> if multipath is configured and multiple routes have different AS in the path, but the AS_PATH lengths are the same (parallel paths),  
           install the multiple paths into the routing table
           -> solves a problem with BGP in data center CLOS networks described in RFC 7938


 11.  oldest route
     -> when multiple paths are external, prefer the path that was received first
     -> oldest is best
     -> this step can be skipped by forcing BGP to compare router-ids
     
     -> bgp bestpath compare-router-id


 12.  router-id
     -> lowest is best
     -> not the same thing as the ORIGINATOR_ID attribute, which is used by route reflectors
     -> ORIGINATOR_ID is an optional, non-transitive attribute
     -> ORIGINATOR_ID is compared instead of the router-id when route reflector attributes are present


 13.  cluster length
     -> lowest is best
     -> CLUSTER_LIST is an optional, non-transitive attribute
     -> lowest CLUSTER_LIST length
     -> router reflectors only


 14.  neighbor address
     -> lowest is best
     -> remote peer used in the TCP connection
