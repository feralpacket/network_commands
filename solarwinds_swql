! up / down events

select n.caption as [Device]
, isnull(tostring(t2.[Down Event]),concat('Greater than ',(select currentvalue from orion.settings where settingid='SWNetPerfMon-Settings-Retain Events'),' days ago')) as [Down Event]
, isnull(tostring(t2.[Up Event]),'Still Down') as [Up Event] 
, isnull(minutediff(t2.[Down Event], isnull(t2.[Up Event],getdate())),99999) as Minutes
,n.custompollerassignmentonnode.currentvalue as [Reason]


from orion.nodes n
left join (select
 starttime.nodes.nodeid
 ,tolocal(starttime.eventtime) as [Down Event]      
 ,(SELECT TOP 1
 tolocal(eventtime) as [EventTime]
 from orion.events as [EndTime]
 where endtime.eventtime >= starttime.eventtime  
 and endtime.eventtype = 5
 and endtime.netobjectid = starttime.netobjectid
 and eventtime is not NULL    
 order by endtime.eventtime    
 ) as [Up Event]    
      
from orion.events starttime    
where starttime.eventtype = 1    
) t2 on n.nodeid = t2.nodeid

where (n.status = 2 or t2.nodeid is not null)
--and n.caption like '%4331%'
and n.customproperties.site = 'Site123'
order by t2.[down event] desc


! last reboot date and time
select
n.caption
,n.lastboot
,n.custompollerassignmentonnode.currentvalue
,n.customproperties.site
from orion.nodes as n
order by caption


! nexus device reload reason
select n.caption as [Device]
,n.lastboot as [Last Boot]
,n.custompollerassignmentonnode.custompollerstatus.status as [Reset Reason]

from orion.nodes n
where 
( n.custompollerassignmentonnode.custompollerstatus.assignmentname like 'cefcModuleResetReasonDescription%'
and n.custompollerassignmentonnode.custompollerstatus.status not like 'Unknown' )
order by [Device] asc


! reboot events
select n.events.eventtype, n.events.message
, n.caption
, n.events.eventtime
,n.custompollerassignmentonnode.currentvalue
from orion.nodes n
--where n.events.eventtype = '14'
where ( n.events.message like '%rebooted%' and n.custompollerassignmentonnode.currentvalue not like '%Not%available%' )
order by eventtime desc


! events
select tolocal(eventtime) as [eventtime], c.nodes.caption, message
from orion.events c
where eventtime >= addhour(-24,eventtime) and eventtype = 14 or eventtype = 5000 or eventtype = 5001
order by eventtime desc


! machine type counts
! counts switch stacks as 1
select count(n.machinetype) as [type], n.machinetype
from orion.nodes n 
group by machinetype
order by type desc


! switch stack machine type counts
select count(n.model) as [number], n.model
from orion.npm.switchstackmember n
group by model
order by number desc


! IOS version counts
select count (n.iosversion) as [version], n.iosversion
from orion.nodes as n
group by iosversion
order by version desc


! number of times a device has reloaded in the last 30 days
select count(n.caption) as [Number of times reloaded]
, n.caption as [Device]
from orion.nodes n
where ( n.events.eventtype = '14' and n.customproperties.site not like 'NON-CISCO' and n.caption not like 'SOLARWINDS' and n.events.eventtime > (getdate()-30) )
group by n.caption
order by [Number of times reloaded] desc


! nodes not in NCM
select caption
from orion.nodes orionnode
left join ncm.nodes ncmnode on orionnode.nodeid=ncmnode.corenodeid
where orionnode.vendor='Cisco' and ncmnode.nodeid is null



! hardware in warning or critical status, excluding tranceivers
SELECT Name, OriginalStatus, FullyQualifiedName, HasHistoricalData, UnManaged, UnManageFrom, UnManageUntil, IsDisabled, HardwareUnitDescription, StatusDescription, AncestorDisplayNames, DisplayName
FROM Orion.HardwareHealth.HardwareItem
where ( not ( name like '%Transmit%') ) and ( not ( name like '%Transceiver%' ) ) and ( not ( name like '%Receive%' ) ) and ( not ( name like 'Te%' ) ) and ( statusdescription = 'Warning' or statusdescription = 'Critical' )



! with hostnames
SELECT n.Node.Caption, Name, OriginalStatus, FullyQualifiedName, HardwareUnitDescription, StatusDescription
FROM Orion.HardwareHealth.HardwareItem as n
where ( not ( name like '%Transmit%') ) and ( not ( name like '%Transceiver%' ) ) and ( not ( name like '%Receive%' ) ) and ( not ( name like 'Te%' ) ) and ( statusdescription = 'Warning' or statusdescription = 'Critical' )



! Cisco inventory with serial numbers
! this broke with solarwinds version 2023.4.2, the nodecaption field returns as NULL
select n.node.nodecaption, model, serial
from ncm.entityphysical n
where serial not like '' and model not like ''
order by nodecaption



! Cisco inventory with serial numbers
! This works with 2023.4.2 for routers and the active switches in switch stacks or stackwise pairs
select parentobjectname, model, servicetag
from orion.hardwarehealth.hardwareinfo
order by parentobjectname



! Cisco inventory with serial numbers
! This works with 2023.4.2 for switch stacks and virtual stackwise pairs.
select displayname, switchnumber, roledescription, macaddress, model, serialnumber, swpriority
from orion.npm.switchstackmember
order by displayname, switchnumber



! accesspoint count by wlc
select count(clients) as [AP number], controllername
from orion.packages.wireless.accesspoints
group by controllername



! raspberrypi up / down query
select n.caption as [Device]
, n.ip AS [IP Address]
, '/Orion/images/StatusIcons/Small-' + n.StatusIcon AS [_IconFor_Device]
, n.DetailsUrl as [_linkfor_Device]
, isnull(tostring(t2.[Down Event]),concat('Greater than ',(SELECT CurrentValue FROM Orion.Settings where settingid='SWNetPerfMon-Settings-Retain Events'),' days ago')) as [Down Event]
, isnull(tostring(t2.[Up Event]),'Still Down') as [Up Event] 
, isnull(MINUTEDIFF(t2.[Down Event], isnull(t2.[Up Event],GETDATE())),99999) as Minutes


from orion.nodes n
left join (SELECT      
 StartTime.Nodes.NodeID        
 ,ToLocal(StartTime.EventTime) AS [Down Event]        
 ,(SELECT TOP 1    
 ToLocal(EventTime) AS [EventTime]    
 FROM Orion.Events AS [EndTime]    
 WHERE EndTime.EventTime >= StartTime.EventTime   
 AND EndTime.EventType = 5    
 AND EndTime.NetObjectID = StartTime.NetObjectID    
 AND EventTime IS NOT NULL    
 ORDER BY EndTime.EventTime    
 ) AS [Up Event]    
      
FROM Orion.Events StartTime    
WHERE StartTime.EventType = 1    
) t2 on n.NodeID = t2.nodeid

where (n.status = 2 or t2.nodeid is not null)
and n.Caption like '%RASPBERRYPI%'
order by t2.[down event] desc



! switch stack ring redundancy change events
! a single switch in a switch stack decides to reload, for reasons
select eventid, eventtime, netobjectid, eventtype, message
from orion.events

where eventtype like '606'
order by eventtime desc




! list route flaps
select
n.nodeid 
,n.caption as [Node]
,n.router.routingtableflap.routedestination as [Destination]
,n.router.routingtableflap.cidr as [CIDR]
,count(*) as [Flaps]

from orion.nodes as n

where
  n.router.routingtableflap.datetime > adddate('hour', -168, getdate())

group by n.nodeid, n.caption, n.router.routingtableflap.routedestination, n.router.routingtableflap.cidr
  having
    count(*) >= 5
order by count(*) desc


! verifying switches have checked in with cisco
! in configuration management -> script management, create a script to run the following command
show license status | se Usage

! in configuration management, group by machine type, select all of the Cisco Catalyst 9300 Series Switch, execute script, select your show license script
! in configuration management, check transfer status until they are all complete

! check the status usage reporting
select ncn.nodecaption, ncn.agentip, ncn.machinetype, nt.deviceoutput, nt.datetime, nt.username
from ncm.transferresults as nt
inner join ncm.nodes as ncn on ncn.nodeid = nt.nodeid
where ncn.machinetype = 'Cisco Catalyst 9300 Series Switch' and nt.requestedscript = 'show license status | se Usage' and datetime >= addhour(-2,getdate()) 
order by ncn.nodecaption

! list the stragglers that are having problems checking in
! need to compare datetime against getdate(), otherwise old deviceoutput might be matched and used, less than 2 hours old in the below, adjust as necessary
select ncn.nodecaption, ncn.agentip, ncn.machinetype, nt.deviceoutput, nt.datetime, nt.username
from ncm.transferresults as nt
inner join ncm.nodes as ncn on ncn.nodeid = nt.nodeid
where ncn.machinetype = 'Cisco Catalyst 9300 Series Switch' and nt.requestedscript = 'show license status | se Usage' and nt.deviceoutput like '%Last ACK received: <none>%' and datetime >= addhour(-2,getdate()) 
order by ncn.nodecaption



! interface duplex
select fullname, duplexmode
from orion.npm.interfaces as n

where n.duplexmode = 2
-- 1 = unknown
-- 2 = halfDuplex
-- 3 = fullDuplex



! recent config changes - campus
! modern dashboard
! with custom property node_type
SELECT 
 ONodes.Status,
 ONodes.DetailsUrl,
 NNodes.NodeCaption,
 ConfigArchive.ConfigTitle,
 ConfigArchive.DownloadTime,
 '/Orion/NCM/ConfigChangeReport.aspx?ConfigID=' + ToString (ConfigArchive.ConfigID) + '&ComparisonType=4&NodeID=' + ToString (NNodes.NodeID) as ConfigChnageReportUrl,
 ONodes.CustomProperties.Node_Type

FROM Orion.Nodes AS ONodes 
 INNER JOIN NCM.Nodes AS NNodes ON NNodes.CoreNodeId = ONodes.NodeId
 INNER JOIN NCM.ConfigArchive as ConfigArchive ON NNodes.NodeId = ConfigArchive.NodeId
 INNER JOIN Cirrus.CacheDiffResults as DiffResults ON ConfigArchive.ConfigID = DiffResults.ConfigID

WHERE (DownloadTime >= ADDHOUR(-24, GETDATE()) AND DiffResults.ComparisonType = 4 AND DiffResults.DiffFlag = 1) AND ( ONodes.CustomProperties.Node_Type = 'MDF' OR ONodes.CustomProperties.Node_Type = 'IDF' )



! recent config changes - campus
! widget
! with custom property node_type
SELECT 
 ONodes.Status,
 ONodes.DetailsUrl,
 '<a href="' + ToString (ONodes.DetailsUrl) + '">' + ToString (NNodes.NodeCaption) + '</a>' as NodeName,
 ConfigArchive.ConfigTitle,
 ConfigArchive.DownloadTime,
 '<a href="/Orion/NCM/ConfigChangeReport.aspx?ConfigID=' + ToString (ConfigArchive.ConfigID) + '&ComparisonType=4&NodeID=' + ToString (NNodes.NodeID) + '">View Change Report</a>' as ConfigChnageReportUrl,
 ONodes.CustomProperties.Node_Type

FROM Orion.Nodes AS ONodes 
 INNER JOIN NCM.Nodes AS NNodes ON NNodes.CoreNodeId = ONodes.NodeId
 INNER JOIN NCM.ConfigArchive as ConfigArchive ON NNodes.NodeId = ConfigArchive.NodeId
 INNER JOIN Cirrus.CacheDiffResults as DiffResults ON ConfigArchive.ConfigID = DiffResults.ConfigID

WHERE (DownloadTime >= ADDHOUR(-24, GETDATE()) AND DiffResults.ComparisonType = 4 AND DiffResults.DiffFlag = 1) AND ( ONodes.CustomProperties.Node_Type = 'MDF' OR ONodes.CustomProperties.Node_Type = 'IDF' )



! recent config changes - data center
! widget
! with custom property site
SELECT 
 ONodes.Status,
 ONodes.DetailsUrl,
 '<a href="' + ToString (ONodes.DetailsUrl) + '">' + ToString (NNodes.NodeCaption) + '</a>' as NodeName,
 ConfigArchive.ConfigTitle,
 ConfigArchive.DownloadTime,
  '<a href="/Orion/NCM/ConfigChangeReport.aspx?ConfigID=' + ToString (ConfigArchive.ConfigID) + '&ComparisonType=4&NodeID=' + ToString (NNodes.NodeID) + '">View Change Report</a>' as ConfigChnageReportUrl,
 ONodes.CustomProperties.Site

FROM Orion.Nodes AS ONodes 
 INNER JOIN NCM.Nodes AS NNodes ON NNodes.CoreNodeId = ONodes.NodeId
 INNER JOIN NCM.ConfigArchive as ConfigArchive ON NNodes.NodeId = ConfigArchive.NodeId
 INNER JOIN Cirrus.CacheDiffResults as DiffResults ON ConfigArchive.ConfigID = DiffResults.ConfigID

WHERE (DownloadTime >= ADDHOUR(-24, GETDATE()) AND DiffResults.ComparisonType = 4 AND DiffResults.DiffFlag = 1) AND ONodes.CustomProperties.Site like '%Datacenter%'



! wireless lan controllers
! swql query for a "modern" dashboard widget
! with custom property node_type
SELECT IPAddress, Caption, IOSVersion, LastBoot, CPUCount, CPULoad, PercentMemoryUsed, MachineType, DetailsUrl
FROM Orion.Nodes as n

WHERE (n.CustomProperties.Node_Type LIKE '%WLC%')


! wireless lan controller AP counts
! swql query for a "modern" dashboard widget
SELECT  n.Name,n.IPAddress,n.ThinAPsCount,n.RogueAPsCount 
FROM Orion.Packages.Wireless.Controllers n


! 9800 wireless lan controller drive space
! because they keep filling up flash and will crash when it's full
! swql query for a "modern" dashboard widget
! with custom poller for CISCO-FLASH-MIB 1.3.6.1.4.1.9.9.10.1.1.4.1.1.4.1.1
! ciscoFlashPartitionFreeSpaceExtended
! 1.3.6.1.4.1.9.9.10.1.1.4.1.1.14.1.1
select n.caption, n.custompollerassignmentonnode.custompollerstatus.status as [Free Space], ( n.custompollerassignmentonnode.custompollerstatus.status / 14822125568 ) * 100 as [Percentage Free]
from orion.nodes as n

where n.custompollerassignmentonnode.assignmentName like '%Free%'

order by ( n.custompollerassignmentonnode.custompollerstatus.status / 14822125568 ) * 100


! wireless lan controller campus access points
! swql query for a "modern" dashboard widget
SELECT ID, ControllerID, IPAddress, Clients, SSID, round((ap.Inbps / 1000000),2) as InMbps,  round((ap.Outbps / 1000000),2) as OutMbps, Name, ControllerName, DetailsUrl

FROM Orion.Packages.Wireless.AccessPoints as AP

where ap.controllername not like '[Ss]tore%'

order by ap.clients desc


! wireless lan controller store access points
! swql query for a "modern" dashboard widget
SELECT ID, ControllerID, IPAddress, Clients, SSID, round((ap.Inbps / 1000000),2) as InMbps,  round((ap.Outbps / 1000000),2) as OutMbps, Name, ControllerName, DetailsUrl

FROM Orion.Packages.Wireless.AccessPoints as AP

where ap.controllername like '[Ss]tore%'

order by ap.ipaddress


! wireless lan controller wireless clients
! swql query for a "modern" dashboard widget
SELECT TOP 1000 IPAddress, Name, MAC, SSID, SignalStrength, round((wc.InTotalBytes / 1000000),2) as InTotalMBytes, round((wc.OutTotalBytes / 1000000),2) as OutTotalMBps, round((wc.Inbps / 1000000),2) as InMbps,  round((wc.Outbps / 1000000),2) as OutMbps, round((wc.TotalBytes / 1000000),2) as TotalMBytes, TotalBytes, TotalPackets

FROM Orion.Packages.Wireless.Clients as WC


! cdp neighbors
! node details page widget
! from https://thwack.solarwinds.com/products/network-performance-monitor-npm/f/forum/17234/cdp_neighbor_resource_v2-swql
! note:  switch interfaces will be missing ( blank ) if the access layer ports are not monitored as a resource
SELECT I.InterfaceCaption AS [Local Interface]
, CDP.IPAddress AS [Remote IP]
, DeviceId AS [Remote Node]
, DevicePort AS [Remote Interface]
, 'NPM' AS [Source]
, (SELECT TOP 1 N2.DetailsURL from Orion.Nodes N2 JOIN Orion.NodeIPAddresses NIP ON (N2.NodeID = NIP.NodeID) WHERE NIP.IPAddress = CDP.IPAddress AND NIP.InterfaceIndex IS NOT NULL) AS [_LinkFor_Device]
