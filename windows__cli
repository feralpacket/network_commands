! computer name
hostname
[System.NET.DNS]::GetHostByName('')
$env:COMPUTERNAME
get-ciminstance -classname Win32_ComputerSystem
 - computer model number


! date / time
date /t
time /t
get-date


! copy output to the clipboard
ipconfig | clip
notepad
Ctrl-V


! interfaces and IP addresses
netsh interface show interface
get-netadapter
 - link speed

get-netipaddress
get-netadapter | ft Name, Status, LinkSpeed, VlanID
get-netadapteradvancedproperty
 - VLAN ID, wake on magic packet

enable-netadapter
disable-netadapter
 - bounce an interface

netsh interface ipv4 show addresses
ipconfig
get-netipconfiguration


! MAC addresses
getmac /v


! DNS servers
netsh interface ipv4 show dnsservers
ipconfig /all
 - lists DNS servers

get-dnsclientserveraddress
ipconfig /registerdns
ipconfig /displaydns
ipconfig /flushdns
nslookup cnn.com
resolve-dnsname -name cnn.com
get-dnsclient
get-dnsclientcache
get-dnsclientcache | select entry,data | where {$_.entry -like "*feralpacket*"}
get-dnsclientcache -name *feralpacket*
get-dnsclientcache -name *feralpacket* | format-table -autosize
clear-dnsclientcache
get-dnsclientserveraddress

net stop dnscache
net start dnscache


! routing table
netsh interface ipv4 show route
netstat -r
route PRINT
get-netroute

route add 198.51.100.0 mask 255.255.255.0 192.0.2.1
netsh interface ipv4 show interfaces
route add 192.51.100.0 mask 255.255.255.0 192.0.2.1 interface 11
route delete 192.51.100.0


! ARP table
arp -a
get-netneighbor
get-netneighbor -addressfamily ipv4


! DHCP
netsh dhcp show server
ipconfig /release
ipconfig /renew
ipconfig /displaydns
ipconfig /registerdns


! MTU
netsh interface ipv4 show subinterfaces
netsh interface ipv4 show interfaces level=verbose
get-netipinterface
ping -f -l 1400 192.0.2.1


! path MTU
netsh interface ipv4 show destinationcache


! discards, header errors, fragments, mtu
netsh interface ipv4 show subinterfaces level=verbose


! windows firewall
netsh advfirewall show currentprofile
get-netfirewallprofile
get-netfirewallprofile -name public | get-netfirewallrule
get-netfirewallportfilter
get-netfirewalladdressfilter


! connections and listening ports
netsh interface ipv4 show tcpconnections
netstat -a
netstat -an
get-nettcpconnection


! tcp / udp / ip / icmp statistics
netstat -e -s
netsh interface ipv4 show tcpstats
netsh interface ipv4 show udpstats
netsh interface ipv4 show ipstats
netsh interface ipv4 show icmpstats
netsh interface ipv4 show icmpstats | findstr /v " 0$"
 - do not display entries with a zero count


! wireless
netsh wlan show wlanreport
 - save report as an .html file
 - error message0x2 if you have both LAN & WLAN connected

netsh wlan show all


! ECN capability
netsh interface tcp show global
get-nettcpsetting


! IPSec
netsh ipsec dynamic show all

! test reachability
nslookup cnn.com
ping 192.0.2.1
ping 192.0.2.1 -t
 - -t:  send pings until stopped with a Ctrl-C
ping 192.0.2.1 -s 198.51.100.1
 - -s:  source address
ping 192.0.2.1 -f -l 1500
ping 192.0.2.1 -f -l 1460
 - l:  size of packet to send, useful to troubleshoot MTU issues with IPsec tunnels
 - f:  do not fragment
test-netconnection 192.0.2.1
1..10 | % { test-netconnection 192.0.2.$_ } | ft -AutoSize
 - ping sweep

telnet 192.0.2.1 53
test-connection 192.0.2.1
test-netconnection 192.0.2.1 -port 53
test-netconnection -computername 'FERALSQL' -port 1433
tracert 192.0.2.1
tracert -d 192.0.2.1
test-netconnection 192.0.2.1 -traceroute
pathping 192.0.2.1


! run command
invoke-command -scriptblock {ipconfig /all}


! active directory
get-addomain
get-addomaincontroller
get-aduser -identity feralpacket
get-aduser -identity feralpacket -properties *
 - LockedOut, PasswordExpired, PasswordLastSet
 
get-aduser -identity feralpacket -properties * | format-list LockedOut
get-adprincipalgroupmembership feralpacket | select name
get-adcomputer -identity heimdallr
 - Enabled
get-adprincipalgroupmembership feralpacket | select name | where-object {$_.name -like "*fs*"}
get-adgroupmember feralpacket_group_ro | select name

get-adcomputer -identity heimdallr -properties *

(Get-WmiObject -Class win32_computersystem | Select-Object -ExpandProperty username).split('\')[1]
  ! logged in users, just the username
(Get-WmiObject -Class win32_computersystem | Select-Object -ExpandProperty username)
  ! logged in users, ADDOMAIN\username
quser
query user
query session
qwinsta
query process
qprocess

gpresult /r


! uptime
wmic path Win32_OperatingSystem get LastBootUpTime
get-wmiobject win32_operatingsystem | select-object LastBootUpTime
get-ciminstance -classname win32_operatingsystem | select LastBootUpTime


! ping set of IP addresses
for %x in (
192.0.2.1
192.0.2.23
192.0.2.123
192.0.2.234
) do ping -n 2 %x | findstr /C:"Reply" /C:"Received"


! Windows 10 builtin packet capture tool
! Run CMD as Administrator
c:\WINDOWS\system32> pktmon.exe

! Configure filters
pktmon filter add -p 20
pktmon filter add -p 21
pktmon filter add -i 10.1.1.1
pktmon filter add -t ICMP
pktmon filter add -d IPv4
pktmon filter list

! List the NICs
pktmon comp list

! Start and stop the capture
pktmon start -etw -p 0 -c 12
pktmon stop

! Delete any filters
pktmon filter remove

! Output to ASCII or .pcap
! Default output file is PktMon.etl
pktmon format PktMon.etl -o ftp.txt
pktmon pcapng log.etl -o log.pcapng

! Capture in real-time
pktmon start -etw -p 0 -l real-time


! search a file
Select-String *.txt -Pattern "WS"
Select-String *.txt -Pattern "WS-C2960X-48LPS-L"  | Measure-Object -line


! uninstall the updated RSAT 
wusa.exe /uninstall /kb:2693643 /quiet /norestart


! find executables
dir /s /b .exe | find /i /v ".exe."


! SHA1 hash of a file
certutil -hashfile cat9k_iosxe.17.03.06.SPA.bin


! MD5 hash of a file
certutil -hashfile cat9k_iosxe.17.03.06.SPA.bin MD5


! drives and drive space
net use

Get-CimInstance -Class Win32_NetworkConnection

fsutil fsinfo drives
fsutil volume list
fsutil volume diskfree c:

dir | find "bytes free"
dir | findstr -r "Directory free$"

wmic /node:"%COMPUTERNAME%" LogicalDisk Where DriveType="3" Get DeviceID,FreeSpace|find /I "c:"
wmic logicaldisk get size,freespace,caption

get-psdrive
get-psdrive C
get-psdrive -name "C"
get-psdrive -psprovider filesystem

[System.IO.DriveInfo]::GetDrives() | Format-Table


! memory
systeminfo
systeminfo | findstr "Memory"

msinfo32
 - pops open the System Information GUI

wmic computersystem
wmic computersystem get TotalPhysicalMemory

typeperf "\Memory\Available Bytes"
typeperf "\Memory\Available MBytes"
typeperf -qx "\Memory"

typeperf "\Process(*)\% Processor Time" -sc 1

wmic os get FreePhysicalMemory
wmic os get /format:list

wmic memorychip get capacity
wmic memorychip list /format:list
wmic memorychip get /format:list

tasklist
tasklist /v
tasklist /FI "STATUS eq RUNNING" | sort /r /+65 

(Get-WMIObject Win32_PhysicalMemory |  Measure-Object Capacity -Sum).sum
(Get-WMIObject Win32_PhysicalMemory |  Measure-Object Capacity -Sum).sum/1GB


! CPU
wmic cpu get loadpercentage
wmic cpu get loadpercentage /value
wmic cpu get /format:list

typeperf "\Processor(_Total)\% Processor Time"

Get-Counter '\Processor(*)\% Processor Time' | Select -Expand Countersamples | Select InstanceName, CookedValue
Get-WmiObject Win32_PerfFormattedData_PerfOS_Processor | Select Name, PercentProcessorTime
[string][int](Get-Counter '\Processor(*)\% Processor Time').Countersamples[0].CookedValue + '%'
gwmi Win32_PerfFormattedData_PerfOS_Processor | Select -First 1 | %{'{0}%' -f $_.PercentProcessorTime}
